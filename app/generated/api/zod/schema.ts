/**
 * Generated by orval v7.3.0 üç∫
 * Do not edit manually.
 * FastAPI
 * OpenAPI spec version: 0.1.0
 */
import { z as zod } from "zod";

/**
 * @summary Ping
 */
export const pingApiV1SystemPingGetResponse = zod.object({
  message: zod.string(),
});

/**
 * „Ç≥„Éü„É•„Éã„ÉÜ„Ç£„Éé„Éº„ÉàÂèÇÂä†„É¶„Éº„Ç∂„Éº„ÅÆ„Éá„Éº„Çø„ÇíÂèñÂæó„Åô„Çã„Ç®„É≥„Éâ„Éù„Ç§„É≥„Éà
 * @summary Get User Enrollment By Participant Id
 */
export const getUserEnrollmentByParticipantIdApiV1DataUserEnrollmentsParticipantIdGetPathParticipantIdRegExp =
  new RegExp("^[0-9A-F]{64}$");

export const getUserEnrollmentByParticipantIdApiV1DataUserEnrollmentsParticipantIdGetParams =
  zod.object({
    participant_id: zod
      .string()
      .regex(
        getUserEnrollmentByParticipantIdApiV1DataUserEnrollmentsParticipantIdGetPathParticipantIdRegExp,
      ),
  });

export const getUserEnrollmentByParticipantIdApiV1DataUserEnrollmentsParticipantIdGetResponseParticipantIdRegExp =
  new RegExp("^[0-9A-F]{64}$");
export const getUserEnrollmentByParticipantIdApiV1DataUserEnrollmentsParticipantIdGetResponseSuccessfulRatingNeededToEarnInMin = 0;
export const getUserEnrollmentByParticipantIdApiV1DataUserEnrollmentsParticipantIdGetResponseTimestampOfLastStateChangeMinOne = 1152921600000;
export const getUserEnrollmentByParticipantIdApiV1DataUserEnrollmentsParticipantIdGetResponseTimestampOfLastStateChangeMaxOne = 1737937175724;
export const getUserEnrollmentByParticipantIdApiV1DataUserEnrollmentsParticipantIdGetResponseTimestampOfLastEarnOutMinOne = 1152921600000;
export const getUserEnrollmentByParticipantIdApiV1DataUserEnrollmentsParticipantIdGetResponseTimestampOfLastEarnOutMaxOne = 1737937175725;
export const getUserEnrollmentByParticipantIdApiV1DataUserEnrollmentsParticipantIdGetResponseModelingGroupMin = 0;

export const getUserEnrollmentByParticipantIdApiV1DataUserEnrollmentsParticipantIdGetResponse =
  zod.object({
    participantId: zod
      .string()
      .regex(
        getUserEnrollmentByParticipantIdApiV1DataUserEnrollmentsParticipantIdGetResponseParticipantIdRegExp,
      ),
    enrollmentState: zod.enum([
      "newUser",
      "earnedIn",
      "atRisk",
      "earnedOutAcknowledged",
      "earnedOutNoAcknowledge",
    ]),
    successfulRatingNeededToEarnIn: zod
      .number()
      .min(
        getUserEnrollmentByParticipantIdApiV1DataUserEnrollmentsParticipantIdGetResponseSuccessfulRatingNeededToEarnInMin,
      ),
    timestampOfLastStateChange: zod
      .number()
      .min(
        getUserEnrollmentByParticipantIdApiV1DataUserEnrollmentsParticipantIdGetResponseTimestampOfLastStateChangeMinOne,
      )
      .max(
        getUserEnrollmentByParticipantIdApiV1DataUserEnrollmentsParticipantIdGetResponseTimestampOfLastStateChangeMaxOne,
      )
      .or(zod.string())
      .or(zod.string()),
    timestampOfLastEarnOut: zod
      .number()
      .min(
        getUserEnrollmentByParticipantIdApiV1DataUserEnrollmentsParticipantIdGetResponseTimestampOfLastEarnOutMinOne,
      )
      .max(
        getUserEnrollmentByParticipantIdApiV1DataUserEnrollmentsParticipantIdGetResponseTimestampOfLastEarnOutMaxOne,
      )
      .or(zod.string()),
    modelingPopulation: zod.enum(["CORE", "EXPANSION"]),
    modelingGroup: zod
      .number()
      .min(
        getUserEnrollmentByParticipantIdApiV1DataUserEnrollmentsParticipantIdGetResponseModelingGroupMin,
      ),
  });

/**
 * Ëá™ÂãïÂàÜÈ°û„Åï„Çå„Åü„Ç≥„Éü„É•„Éã„ÉÜ„Ç£„Éé„Éº„Éà„ÅÆ„Éà„Éî„ÉÉ„ÇØ‰∏ÄË¶ß„ÇíÂèñÂæó„Åô„Çã„Ç®„É≥„Éâ„Éù„Ç§„É≥„Éà
 * @summary Get Topics
 */
export const getTopicsApiV1DataTopicsGetResponseDataItemTopicIdMin = 0;
export const getTopicsApiV1DataTopicsGetResponseDataItemReferenceCountMin = 0;

export const getTopicsApiV1DataTopicsGetResponse = zod.object({
  data: zod.array(
    zod.object({
      topicId: zod
        .number()
        .min(getTopicsApiV1DataTopicsGetResponseDataItemTopicIdMin),
      label: zod.record(zod.string(), zod.string().min(1)),
      referenceCount: zod
        .number()
        .min(getTopicsApiV1DataTopicsGetResponseDataItemReferenceCountMin),
    }),
  ),
});

/**
 * „Ç≥„Éü„É•„Éã„ÉÜ„Ç£„Éé„Éº„Éà„ÅÆ„Éá„Éº„Çø„ÇíÂèñÂæó„Åô„Çã„Ç®„É≥„Éâ„Éù„Ç§„É≥„Éà
 * @summary Get Notes
 */
export const getNotesApiV1DataNotesGetQueryNoteIdsItemRegExp = new RegExp(
  "^[0-9]{19}$",
);
export const getNotesApiV1DataNotesGetQueryCreatedAtFromMinOne = 1152921600000;
export const getNotesApiV1DataNotesGetQueryCreatedAtFromMaxOne = 1737937176032;
export const getNotesApiV1DataNotesGetQueryCreatedAtToMinOne = 1152921600000;
export const getNotesApiV1DataNotesGetQueryCreatedAtToMaxOne = 1737937176032;
export const getNotesApiV1DataNotesGetQueryOffsetMin = 0;
export const getNotesApiV1DataNotesGetQueryLimitMax = 1000;
export const getNotesApiV1DataNotesGetQueryTopicIdsItemMin = 0;
export const getNotesApiV1DataNotesGetQueryPostIdsItemRegExp = new RegExp(
  "^([0-9]{1,19}|)$",
);

export const getNotesApiV1DataNotesGetQueryParams = zod.object({
  note_ids: zod
    .array(zod.string().regex(getNotesApiV1DataNotesGetQueryNoteIdsItemRegExp))
    .or(zod.null())
    .optional(),
  created_at_from: zod
    .number()
    .min(getNotesApiV1DataNotesGetQueryCreatedAtFromMinOne)
    .max(getNotesApiV1DataNotesGetQueryCreatedAtFromMaxOne)
    .or(zod.null())
    .optional(),
  created_at_to: zod
    .number()
    .min(getNotesApiV1DataNotesGetQueryCreatedAtToMinOne)
    .max(getNotesApiV1DataNotesGetQueryCreatedAtToMaxOne)
    .or(zod.null())
    .optional(),
  offset: zod.number().min(getNotesApiV1DataNotesGetQueryOffsetMin).optional(),
  limit: zod.number().max(getNotesApiV1DataNotesGetQueryLimitMax).optional(),
  topic_ids: zod
    .array(zod.number().min(getNotesApiV1DataNotesGetQueryTopicIdsItemMin))
    .or(zod.null())
    .optional(),
  post_ids: zod
    .array(zod.string().regex(getNotesApiV1DataNotesGetQueryPostIdsItemRegExp))
    .or(zod.null())
    .optional(),
  current_status: zod.array(zod.string()).or(zod.null()).optional(),
  language: zod
    .enum([
      "en",
      "es",
      "ja",
      "pt",
      "de",
      "fr",
      "fi",
      "tr",
      "nl",
      "he",
      "it",
      "fa",
      "ca",
      "ar",
      "el",
      "sv",
      "da",
      "ru",
      "pl",
      "other",
    ])
    .or(zod.null())
    .optional(),
  search_text: zod.string().or(zod.null()).optional(),
});

export const getNotesApiV1DataNotesGetResponseDataItemNoteIdRegExp = new RegExp(
  "^[0-9]{19}$",
);
export const getNotesApiV1DataNotesGetResponseDataItemPostIdRegExp = new RegExp(
  "^([0-9]{1,19}|)$",
);
export const getNotesApiV1DataNotesGetResponseDataItemTopicsItemTopicIdMin = 0;
export const getNotesApiV1DataNotesGetResponseDataItemTopicsItemReferenceCountMin = 0;
export const getNotesApiV1DataNotesGetResponseDataItemCreatedAtMin = 1152921600000;

export const getNotesApiV1DataNotesGetResponseDataItemCreatedAtMax = 1737937175733;
export const getNotesApiV1DataNotesGetResponseMetaNextMaxOne = 2083;
export const getNotesApiV1DataNotesGetResponseMetaPrevMaxOne = 2083;

export const getNotesApiV1DataNotesGetResponse = zod.object({
  data: zod.array(
    zod.object({
      noteId: zod
        .string()
        .regex(getNotesApiV1DataNotesGetResponseDataItemNoteIdRegExp),
      postId: zod
        .string()
        .regex(getNotesApiV1DataNotesGetResponseDataItemPostIdRegExp),
      language: zod.enum([
        "en",
        "es",
        "ja",
        "pt",
        "de",
        "fr",
        "fi",
        "tr",
        "nl",
        "he",
        "it",
        "fa",
        "ca",
        "ar",
        "el",
        "sv",
        "da",
        "ru",
        "pl",
        "other",
      ]),
      topics: zod.array(
        zod.object({
          topicId: zod
            .number()
            .min(getNotesApiV1DataNotesGetResponseDataItemTopicsItemTopicIdMin),
          label: zod.record(zod.string(), zod.string().min(1)),
          referenceCount: zod
            .number()
            .min(
              getNotesApiV1DataNotesGetResponseDataItemTopicsItemReferenceCountMin,
            ),
        }),
      ),
      summary: zod.string().min(1),
      currentStatus: zod
        .enum([
          "NEEDS_MORE_RATINGS",
          "CURRENTLY_RATED_HELPFUL",
          "CURRENTLY_RATED_NOT_HELPFUL",
        ])
        .or(zod.null()),
      createdAt: zod
        .number()
        .min(getNotesApiV1DataNotesGetResponseDataItemCreatedAtMin)
        .max(getNotesApiV1DataNotesGetResponseDataItemCreatedAtMax),
    }),
  ),
  meta: zod.object({
    next: zod
      .string()
      .url()
      .min(1)
      .max(getNotesApiV1DataNotesGetResponseMetaNextMaxOne)
      .or(zod.null())
      .optional(),
    prev: zod
      .string()
      .url()
      .min(1)
      .max(getNotesApiV1DataNotesGetResponseMetaPrevMaxOne)
      .or(zod.null())
      .optional(),
  }),
});

/**
 * Post „ÅÆ„Éá„Éº„Çø„ÇíÂèñÂæó„Åô„Çã„Ç®„É≥„Éâ„Éù„Ç§„É≥„Éà
 * @summary Get Posts
 */
export const getPostsApiV1DataPostsGetQueryPostIdsItemRegExp = new RegExp(
  "^([0-9]{1,19}|)$",
);
export const getPostsApiV1DataPostsGetQueryNoteIdsItemRegExp = new RegExp(
  "^[0-9]{19}$",
);
export const getPostsApiV1DataPostsGetQueryUserIdsItemRegExp = new RegExp(
  "^([0-9]{1,19}|)$",
);
export const getPostsApiV1DataPostsGetQueryCreatedAtFromMinOne = 1152921600000;
export const getPostsApiV1DataPostsGetQueryCreatedAtFromMaxOne = 1737937176037;
export const getPostsApiV1DataPostsGetQueryCreatedAtToMinOne = 1152921600000;
export const getPostsApiV1DataPostsGetQueryCreatedAtToMaxOne = 1737937176038;
export const getPostsApiV1DataPostsGetQueryOffsetMin = 0;
export const getPostsApiV1DataPostsGetQueryLimitMax = 1000;
export const getPostsApiV1DataPostsGetQuerySearchUrlMaxOne = 2083;

export const getPostsApiV1DataPostsGetQueryParams = zod.object({
  post_ids: zod
    .array(zod.string().regex(getPostsApiV1DataPostsGetQueryPostIdsItemRegExp))
    .or(zod.null())
    .optional(),
  note_ids: zod
    .array(zod.string().regex(getPostsApiV1DataPostsGetQueryNoteIdsItemRegExp))
    .or(zod.null())
    .optional(),
  user_ids: zod
    .array(zod.string().regex(getPostsApiV1DataPostsGetQueryUserIdsItemRegExp))
    .or(zod.null())
    .optional(),
  created_at_from: zod
    .number()
    .min(getPostsApiV1DataPostsGetQueryCreatedAtFromMinOne)
    .max(getPostsApiV1DataPostsGetQueryCreatedAtFromMaxOne)
    .or(zod.string())
    .or(zod.null())
    .optional(),
  created_at_to: zod
    .number()
    .min(getPostsApiV1DataPostsGetQueryCreatedAtToMinOne)
    .max(getPostsApiV1DataPostsGetQueryCreatedAtToMaxOne)
    .or(zod.string())
    .or(zod.null())
    .optional(),
  offset: zod.number().min(getPostsApiV1DataPostsGetQueryOffsetMin).optional(),
  limit: zod.number().max(getPostsApiV1DataPostsGetQueryLimitMax).optional(),
  search_text: zod.string().or(zod.null()).optional(),
  search_url: zod
    .string()
    .url()
    .min(1)
    .max(getPostsApiV1DataPostsGetQuerySearchUrlMaxOne)
    .or(zod.null())
    .optional(),
  media: zod.boolean().optional(),
});

export const getPostsApiV1DataPostsGetResponseDataItemPostIdRegExp = new RegExp(
  "^([0-9]{1,19}|)$",
);
export const getPostsApiV1DataPostsGetResponseDataItemXUserIdRegExp =
  new RegExp("^([0-9]{1,19}|)$");
export const getPostsApiV1DataPostsGetResponseDataItemXUserUserIdRegExp =
  new RegExp("^([0-9]{1,19}|)$");
export const getPostsApiV1DataPostsGetResponseDataItemXUserProfileImageMax = 2083;
export const getPostsApiV1DataPostsGetResponseDataItemXUserFollowersCountMin = 0;
export const getPostsApiV1DataPostsGetResponseDataItemXUserFollowingCountMin = 0;
export const getPostsApiV1DataPostsGetResponseDataItemMediaDetailsItemUrlMax = 2083;
export const getPostsApiV1DataPostsGetResponseDataItemMediaDetailsItemWidthMin = 0;
export const getPostsApiV1DataPostsGetResponseDataItemMediaDetailsItemHeightMin = 0;
export const getPostsApiV1DataPostsGetResponseDataItemCreatedAtMin = 1152921600000;

export const getPostsApiV1DataPostsGetResponseDataItemCreatedAtMax = 1737937175740;
export const getPostsApiV1DataPostsGetResponseDataItemLikeCountMin = 0;
export const getPostsApiV1DataPostsGetResponseDataItemRepostCountMin = 0;
export const getPostsApiV1DataPostsGetResponseDataItemImpressionCountMin = 0;
export const getPostsApiV1DataPostsGetResponseDataItemLinksItemUrlMax = 2083;
export const getPostsApiV1DataPostsGetResponseDataItemLinkMax = 2083;
export const getPostsApiV1DataPostsGetResponseMetaNextMaxOne = 2083;
export const getPostsApiV1DataPostsGetResponseMetaPrevMaxOne = 2083;

export const getPostsApiV1DataPostsGetResponse = zod.object({
  data: zod.array(
    zod.object({
      postId: zod
        .string()
        .regex(getPostsApiV1DataPostsGetResponseDataItemPostIdRegExp),
      xUserId: zod
        .string()
        .regex(getPostsApiV1DataPostsGetResponseDataItemXUserIdRegExp),
      xUser: zod.object({
        userId: zod
          .string()
          .regex(getPostsApiV1DataPostsGetResponseDataItemXUserUserIdRegExp),
        name: zod.string().min(1),
        profileImage: zod
          .string()
          .url()
          .min(1)
          .max(getPostsApiV1DataPostsGetResponseDataItemXUserProfileImageMax),
        followersCount: zod
          .number()
          .min(getPostsApiV1DataPostsGetResponseDataItemXUserFollowersCountMin),
        followingCount: zod
          .number()
          .min(getPostsApiV1DataPostsGetResponseDataItemXUserFollowingCountMin),
      }),
      text: zod.string(),
      mediaDetails: zod
        .array(
          zod.object({
            mediaKey: zod.string(),
            type: zod.enum(["photo", "video", "animated_gif"]),
            url: zod
              .string()
              .url()
              .min(1)
              .max(
                getPostsApiV1DataPostsGetResponseDataItemMediaDetailsItemUrlMax,
              ),
            width: zod
              .number()
              .min(
                getPostsApiV1DataPostsGetResponseDataItemMediaDetailsItemWidthMin,
              ),
            height: zod
              .number()
              .min(
                getPostsApiV1DataPostsGetResponseDataItemMediaDetailsItemHeightMin,
              ),
          }),
        )
        .optional(),
      createdAt: zod
        .number()
        .min(getPostsApiV1DataPostsGetResponseDataItemCreatedAtMin)
        .max(getPostsApiV1DataPostsGetResponseDataItemCreatedAtMax),
      likeCount: zod
        .number()
        .min(getPostsApiV1DataPostsGetResponseDataItemLikeCountMin),
      repostCount: zod
        .number()
        .min(getPostsApiV1DataPostsGetResponseDataItemRepostCountMin),
      impressionCount: zod
        .number()
        .min(getPostsApiV1DataPostsGetResponseDataItemImpressionCountMin),
      links: zod
        .array(
          zod.object({
            linkId: zod.string().uuid(),
            url: zod
              .string()
              .url()
              .min(1)
              .max(getPostsApiV1DataPostsGetResponseDataItemLinksItemUrlMax),
          }),
        )
        .optional(),
      link: zod
        .string()
        .url()
        .min(1)
        .max(getPostsApiV1DataPostsGetResponseDataItemLinkMax),
    }),
  ),
  meta: zod.object({
    next: zod
      .string()
      .url()
      .min(1)
      .max(getPostsApiV1DataPostsGetResponseMetaNextMaxOne)
      .or(zod.null())
      .optional(),
    prev: zod
      .string()
      .url()
      .min(1)
      .max(getPostsApiV1DataPostsGetResponseMetaPrevMaxOne)
      .or(zod.null())
      .optional(),
  }),
});

/**
 * „Ç¢„Éâ„Éê„É≥„Çπ„Éâ„Çµ„Éº„ÉÅ„Åß„Éá„Éº„Çø„ÇíÂèñÂæó„Åô„Çã„Ç®„É≥„Éâ„Éù„Ç§„É≥„Éà
 * @summary Search
 */
export const searchApiV1DataSearchGetQueryTopicIdsItemMin = 0;
export const searchApiV1DataSearchGetQueryNoteCreatedAtFromMinOne = 1152921600000;
export const searchApiV1DataSearchGetQueryNoteCreatedAtFromMaxOne = 1737937176043;
export const searchApiV1DataSearchGetQueryNoteCreatedAtToMinOne = 1152921600000;
export const searchApiV1DataSearchGetQueryNoteCreatedAtToMaxOne = 1737937176044;
export const searchApiV1DataSearchGetQueryOffsetMin = 0;
export const searchApiV1DataSearchGetQueryLimitMax = 1000;

export const searchApiV1DataSearchGetQueryParams = zod.object({
  note_includes_text: zod.string().or(zod.null()).optional(),
  note_excludes_text: zod.string().or(zod.null()).optional(),
  post_includes_text: zod.string().or(zod.null()).optional(),
  post_excludes_text: zod.string().or(zod.null()).optional(),
  language: zod
    .enum([
      "en",
      "es",
      "ja",
      "pt",
      "de",
      "fr",
      "fi",
      "tr",
      "nl",
      "he",
      "it",
      "fa",
      "ca",
      "ar",
      "el",
      "sv",
      "da",
      "ru",
      "pl",
      "other",
    ])
    .or(zod.null())
    .optional(),
  topic_ids: zod
    .array(zod.number().min(searchApiV1DataSearchGetQueryTopicIdsItemMin))
    .or(zod.null())
    .optional(),
  note_status: zod.array(zod.string()).or(zod.null()).optional(),
  note_created_at_from: zod
    .number()
    .min(searchApiV1DataSearchGetQueryNoteCreatedAtFromMinOne)
    .max(searchApiV1DataSearchGetQueryNoteCreatedAtFromMaxOne)
    .or(zod.string())
    .or(zod.null())
    .optional(),
  note_created_at_to: zod
    .number()
    .min(searchApiV1DataSearchGetQueryNoteCreatedAtToMinOne)
    .max(searchApiV1DataSearchGetQueryNoteCreatedAtToMaxOne)
    .or(zod.string())
    .or(zod.null())
    .optional(),
  x_user_names: zod.array(zod.string()).or(zod.null()).optional(),
  x_user_followers_count_from: zod.number().or(zod.null()).optional(),
  x_user_follow_count_from: zod.number().or(zod.null()).optional(),
  post_like_count_from: zod.number().or(zod.null()).optional(),
  post_repost_count_from: zod.number().or(zod.null()).optional(),
  post_impression_count_from: zod.number().or(zod.null()).optional(),
  post_includes_media: zod.boolean().optional(),
  offset: zod.number().min(searchApiV1DataSearchGetQueryOffsetMin).optional(),
  limit: zod.number().max(searchApiV1DataSearchGetQueryLimitMax).optional(),
});

export const searchApiV1DataSearchGetResponseDataItemNoteIdRegExp = new RegExp(
  "^[0-9]{19}$",
);
export const searchApiV1DataSearchGetResponseDataItemTopicsItemTopicIdMin = 0;
export const searchApiV1DataSearchGetResponseDataItemTopicsItemReferenceCountMin = 0;
export const searchApiV1DataSearchGetResponseDataItemPostIdRegExp = new RegExp(
  "^([0-9]{1,19}|)$",
);
export const searchApiV1DataSearchGetResponseDataItemCreatedAtMin = 1152921600000;

export const searchApiV1DataSearchGetResponseDataItemCreatedAtMax = 1737937175833;
export const searchApiV1DataSearchGetResponseDataItemPostPostIdRegExp =
  new RegExp("^([0-9]{1,19}|)$");
export const searchApiV1DataSearchGetResponseDataItemPostXUserIdRegExp =
  new RegExp("^([0-9]{1,19}|)$");
export const searchApiV1DataSearchGetResponseDataItemPostXUserUserIdRegExp =
  new RegExp("^([0-9]{1,19}|)$");
export const searchApiV1DataSearchGetResponseDataItemPostXUserProfileImageMax = 2083;
export const searchApiV1DataSearchGetResponseDataItemPostXUserFollowersCountMin = 0;
export const searchApiV1DataSearchGetResponseDataItemPostXUserFollowingCountMin = 0;
export const searchApiV1DataSearchGetResponseDataItemPostMediaDetailsItemUrlMax = 2083;
export const searchApiV1DataSearchGetResponseDataItemPostMediaDetailsItemWidthMin = 0;
export const searchApiV1DataSearchGetResponseDataItemPostMediaDetailsItemHeightMin = 0;
export const searchApiV1DataSearchGetResponseDataItemPostCreatedAtMin = 1152921600000;

export const searchApiV1DataSearchGetResponseDataItemPostCreatedAtMax = 1737937175740;
export const searchApiV1DataSearchGetResponseDataItemPostLikeCountMin = 0;
export const searchApiV1DataSearchGetResponseDataItemPostRepostCountMin = 0;
export const searchApiV1DataSearchGetResponseDataItemPostImpressionCountMin = 0;
export const searchApiV1DataSearchGetResponseDataItemPostLinksItemUrlMax = 2083;
export const searchApiV1DataSearchGetResponseDataItemPostLinkMax = 2083;
export const searchApiV1DataSearchGetResponseMetaNextMaxOne = 2083;
export const searchApiV1DataSearchGetResponseMetaPrevMaxOne = 2083;

export const searchApiV1DataSearchGetResponse = zod.object({
  data: zod.array(
    zod.object({
      noteId: zod
        .string()
        .regex(searchApiV1DataSearchGetResponseDataItemNoteIdRegExp),
      summary: zod.string().min(1),
      language: zod.enum([
        "en",
        "es",
        "ja",
        "pt",
        "de",
        "fr",
        "fi",
        "tr",
        "nl",
        "he",
        "it",
        "fa",
        "ca",
        "ar",
        "el",
        "sv",
        "da",
        "ru",
        "pl",
        "other",
      ]),
      topics: zod.array(
        zod.object({
          topicId: zod
            .number()
            .min(searchApiV1DataSearchGetResponseDataItemTopicsItemTopicIdMin),
          label: zod.record(zod.string(), zod.string().min(1)),
          referenceCount: zod
            .number()
            .min(
              searchApiV1DataSearchGetResponseDataItemTopicsItemReferenceCountMin,
            ),
        }),
      ),
      postId: zod
        .string()
        .regex(searchApiV1DataSearchGetResponseDataItemPostIdRegExp),
      currentStatus: zod
        .enum([
          "NEEDS_MORE_RATINGS",
          "CURRENTLY_RATED_HELPFUL",
          "CURRENTLY_RATED_NOT_HELPFUL",
        ])
        .or(zod.null()),
      createdAt: zod
        .number()
        .min(searchApiV1DataSearchGetResponseDataItemCreatedAtMin)
        .max(searchApiV1DataSearchGetResponseDataItemCreatedAtMax),
      post: zod.object({
        postId: zod
          .string()
          .regex(searchApiV1DataSearchGetResponseDataItemPostPostIdRegExp),
        xUserId: zod
          .string()
          .regex(searchApiV1DataSearchGetResponseDataItemPostXUserIdRegExp),
        xUser: zod.object({
          userId: zod
            .string()
            .regex(
              searchApiV1DataSearchGetResponseDataItemPostXUserUserIdRegExp,
            ),
          name: zod.string().min(1),
          profileImage: zod
            .string()
            .url()
            .min(1)
            .max(
              searchApiV1DataSearchGetResponseDataItemPostXUserProfileImageMax,
            ),
          followersCount: zod
            .number()
            .min(
              searchApiV1DataSearchGetResponseDataItemPostXUserFollowersCountMin,
            ),
          followingCount: zod
            .number()
            .min(
              searchApiV1DataSearchGetResponseDataItemPostXUserFollowingCountMin,
            ),
        }),
        text: zod.string(),
        mediaDetails: zod
          .array(
            zod.object({
              mediaKey: zod.string(),
              type: zod.enum(["photo", "video", "animated_gif"]),
              url: zod
                .string()
                .url()
                .min(1)
                .max(
                  searchApiV1DataSearchGetResponseDataItemPostMediaDetailsItemUrlMax,
                ),
              width: zod
                .number()
                .min(
                  searchApiV1DataSearchGetResponseDataItemPostMediaDetailsItemWidthMin,
                ),
              height: zod
                .number()
                .min(
                  searchApiV1DataSearchGetResponseDataItemPostMediaDetailsItemHeightMin,
                ),
            }),
          )
          .optional(),
        createdAt: zod
          .number()
          .min(searchApiV1DataSearchGetResponseDataItemPostCreatedAtMin)
          .max(searchApiV1DataSearchGetResponseDataItemPostCreatedAtMax),
        likeCount: zod
          .number()
          .min(searchApiV1DataSearchGetResponseDataItemPostLikeCountMin),
        repostCount: zod
          .number()
          .min(searchApiV1DataSearchGetResponseDataItemPostRepostCountMin),
        impressionCount: zod
          .number()
          .min(searchApiV1DataSearchGetResponseDataItemPostImpressionCountMin),
        links: zod
          .array(
            zod.object({
              linkId: zod.string().uuid(),
              url: zod
                .string()
                .url()
                .min(1)
                .max(
                  searchApiV1DataSearchGetResponseDataItemPostLinksItemUrlMax,
                ),
            }),
          )
          .optional(),
        link: zod
          .string()
          .url()
          .min(1)
          .max(searchApiV1DataSearchGetResponseDataItemPostLinkMax),
      }),
    }),
  ),
  meta: zod.object({
    next: zod
      .string()
      .url()
      .min(1)
      .max(searchApiV1DataSearchGetResponseMetaNextMaxOne)
      .or(zod.null())
      .optional(),
    prev: zod
      .string()
      .url()
      .min(1)
      .max(searchApiV1DataSearchGetResponseMetaPrevMaxOne)
      .or(zod.null())
      .optional(),
  }),
});
